[{"D:\\GitHub\\covid-dashboard\\src\\index.js":"1","D:\\GitHub\\covid-dashboard\\src\\reportWebVitals.js":"2","D:\\GitHub\\covid-dashboard\\src\\App.js":"3","D:\\GitHub\\covid-dashboard\\src\\header\\header.js":"4","D:\\GitHub\\covid-dashboard\\src\\graph\\BarChart.js":"5","D:\\GitHub\\covid-dashboard\\src\\rightStatBlock\\RecoveredCases\\RecoveredCases.js":"6","D:\\GitHub\\covid-dashboard\\src\\leftStatBlock\\GlobalAmount\\GlobalAmount.js":"7","D:\\GitHub\\covid-dashboard\\src\\rightStatBlock\\DeathCases\\DeathCases.js":"8","D:\\GitHub\\covid-dashboard\\src\\leftStatBlock\\CasesByCountry\\CasesByCountry.js":"9","D:\\GitHub\\covid-dashboard\\src\\mapBlock\\mapBlock.js":"10","D:\\GitHub\\covid-dashboard\\src\\header\\logo.js":"11","D:\\GitHub\\covid-dashboard\\src\\graph\\OptionItem.js":"12","D:\\GitHub\\covid-dashboard\\src\\rightStatBlock\\RecoveredCases\\CountryItem.js":"13","D:\\GitHub\\covid-dashboard\\src\\leftStatBlock\\CasesByCountry\\CountryItem.js":"14","D:\\GitHub\\covid-dashboard\\src\\rightStatBlock\\DeathCases\\CountryItem.js":"15"},{"size":517,"mtime":1608711278200,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1608711278202,"results":"18","hashOfConfig":"17"},{"size":4620,"mtime":1608752680972,"results":"19","hashOfConfig":"17"},{"size":880,"mtime":1608711341728,"results":"20","hashOfConfig":"17"},{"size":4372,"mtime":1608750363816,"results":"21","hashOfConfig":"17"},{"size":885,"mtime":1608711341731,"results":"22","hashOfConfig":"17"},{"size":420,"mtime":1608711341730,"results":"23","hashOfConfig":"17"},{"size":832,"mtime":1608711341731,"results":"24","hashOfConfig":"17"},{"size":637,"mtime":1608711341729,"results":"25","hashOfConfig":"17"},{"size":1646,"mtime":1608752525243,"results":"26","hashOfConfig":"17"},{"size":3411,"mtime":1608711341728,"results":"27","hashOfConfig":"17"},{"size":735,"mtime":1608750363817,"results":"28","hashOfConfig":"17"},{"size":922,"mtime":1608744084074,"results":"29","hashOfConfig":"17"},{"size":883,"mtime":1608750351638,"results":"30","hashOfConfig":"17"},{"size":908,"mtime":1608744086144,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"djdil",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\GitHub\\covid-dashboard\\src\\index.js",[],["65","66"],"D:\\GitHub\\covid-dashboard\\src\\reportWebVitals.js",[],"D:\\GitHub\\covid-dashboard\\src\\App.js",["67","68"],"import React, { useEffect, useState } from \"react\";\r\nimport GlobalAmount from \"./leftStatBlock/GlobalAmount/GlobalAmount\";\r\nimport CasesByCountry from \"./leftStatBlock/CasesByCountry/CasesByCountry\";\r\nimport DeathCases from \"./rightStatBlock/DeathCases/DeathCases\";\r\nimport RecoveredCases from \"./rightStatBlock/RecoveredCases/RecoveredCases\";\r\nimport \"./App.css\";\r\nimport Header from \"./header/header\";\r\nimport MapBlock from './mapBlock/mapBlock'\r\nimport BarChart from \"./graph/BarChart\";\r\n\r\nfunction App() {\r\n  const [globalData, setGlobalData] = useState([]);\r\n  const [isToday, setIsToday] = useState([]);\r\n\r\n  const [countriesData, setCountriesData] = useState([]);\r\n  const [worldDataCases, setWorldDataCases] = useState([]);\r\n  const [worldDataDeaths, setWorldDataDeaths] = useState([]);\r\n  const [worldDataRecovered, setWorldDataRecovered] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getGlobalData = async () => {\r\n      const response = await fetch(\"https://disease.sh/v3/covid-19/all\");\r\n      const dataSummary = await response.json();\r\n\r\n      setGlobalData(dataSummary);\r\n      setWorldDataCases(dataSummary.cases);\r\n      setWorldDataDeaths(dataSummary.deaths);\r\n      setWorldDataRecovered(dataSummary.recovered);\r\n      setIsToday(false);\r\n    };\r\n\r\n    getGlobalData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      const response = await fetch(\"https://disease.sh/v3/covid-19/countries\");\r\n      const countriesData = await response.json();\r\n      setCountriesData(countriesData);\r\n    };\r\n\r\n    getCountriesData();\r\n  }, []);\r\n\r\n  function maxCases (countriesData) {\r\n    let max = 0;\r\n    countriesData.map((item) => {\r\n      if (item.cases > max) {\r\n        max = item.cases;\r\n      }\r\n    })\r\n    return max;\r\n  }\r\n\r\n  const max = maxCases(countriesData);\r\n\r\n  countriesData.map((item) => {\r\n    if (item.cases === max) {\r\n    item.markerSize = 700000;\r\n    } else {item.markerSize = item.cases / max * 700000}\r\n  })\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"header container\">\r\n        <Header />\r\n      </header>\r\n      <main className=\"main container\">\r\n        <div className=\"infected\">\r\n          <div className=\"global\">\r\n            {worldDataCases !== undefined ? (\r\n              <GlobalAmount globalCases={worldDataCases} />\r\n            ) : null}\r\n          </div>\r\n          <div className=\"country\">\r\n            {countriesData !== undefined ? (\r\n              <CasesByCountry\r\n                countriesArr={countriesData}\r\n                todayStatus={isToday}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <div className=\"period-buttons-wrapper\">\r\n            <button\r\n              className={isToday ? `button` : `button button--active`}\r\n              onClick={() => {\r\n                setWorldDataCases(globalData.cases);\r\n                setWorldDataDeaths(globalData.deaths);\r\n                setWorldDataRecovered(globalData.recovered);\r\n                setIsToday(false);\r\n              }}\r\n            >\r\n              Total\r\n            </button>\r\n            <button\r\n              className={isToday ? `button button--active` : `button`}\r\n              onClick={() => {\r\n                setWorldDataCases(globalData.todayCases);\r\n                setWorldDataDeaths(globalData.todayDeaths);\r\n                setWorldDataRecovered(globalData.todayRecovered);\r\n                setIsToday(true);\r\n              }}\r\n            >\r\n              Today\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"map\">\r\n          {countriesData !== undefined ? (\r\n              <MapBlock \r\n                countriesArr={countriesData}\r\n              />\r\n            ) : null}\r\n        </div>\r\n        <div className=\"day-statistic\">\r\n          <div className=\"day-statistic-data\">\r\n            <div className=\"deaths\">\r\n              {countriesData !== undefined ? (\r\n                <DeathCases\r\n                  countriesDeathsArr={countriesData}\r\n                  globalDeaths={worldDataDeaths}\r\n                  todayStatus={isToday}\r\n                />\r\n              ) : null}\r\n            </div>\r\n            <div className=\"lives\">\r\n              {countriesData !== undefined ? (\r\n                <RecoveredCases\r\n                  countriesRecoveredArr={countriesData}\r\n                  globalRecovered={worldDataRecovered}\r\n                  todayStatus={isToday}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <BarChart />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\GitHub\\covid-dashboard\\src\\header\\header.js",[],"D:\\GitHub\\covid-dashboard\\src\\graph\\BarChart.js",[],"D:\\GitHub\\covid-dashboard\\src\\rightStatBlock\\RecoveredCases\\RecoveredCases.js",[],"D:\\GitHub\\covid-dashboard\\src\\leftStatBlock\\GlobalAmount\\GlobalAmount.js",[],"D:\\GitHub\\covid-dashboard\\src\\rightStatBlock\\DeathCases\\DeathCases.js",[],"D:\\GitHub\\covid-dashboard\\src\\leftStatBlock\\CasesByCountry\\CasesByCountry.js",[],"D:\\GitHub\\covid-dashboard\\src\\mapBlock\\mapBlock.js",[],"D:\\GitHub\\covid-dashboard\\src\\header\\logo.js",[],"D:\\GitHub\\covid-dashboard\\src\\graph\\OptionItem.js",[],"D:\\GitHub\\covid-dashboard\\src\\rightStatBlock\\RecoveredCases\\CountryItem.js",[],["69","70"],"D:\\GitHub\\covid-dashboard\\src\\leftStatBlock\\CasesByCountry\\CountryItem.js",[],"D:\\GitHub\\covid-dashboard\\src\\rightStatBlock\\DeathCases\\CountryItem.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":47,"column":30,"nodeType":"77","messageId":"78","endLine":47,"endColumn":32},{"ruleId":"75","severity":1,"message":"76","line":57,"column":28,"nodeType":"77","messageId":"78","endLine":57,"endColumn":30},{"ruleId":"71","replacedBy":"79"},{"ruleId":"73","replacedBy":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["81"],["82"],"no-global-assign","no-unsafe-negation"]