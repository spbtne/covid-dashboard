{"version":3,"sources":["leftStatBlock/GlobalAmount/GlobalAmount.js","leftStatBlock/CasesByCountry/CountryItem.js","leftStatBlock/CasesByCountry/CasesByCountry.js","rightStatBlock/DeathCases/CountryItem.js","rightStatBlock/DeathCases/DeathCases.js","rightStatBlock/RecoveredCases/CountryItem.js","rightStatBlock/RecoveredCases/RecoveredCases.js","header/logo.js","header/header.js","mapBlock/mapBlock.js","graph/OptionItem.js","graph/BarChart.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalAmount","readableAmount","globalCases","toString","replace","className","CountryItem","countryObj","todayStatus","todayCases","cases","src","countryInfo","flag","width","alt","country","CasesByCountry","countriesArr","map","countryItem","index","countryDataObj","todayDeaths","deaths","DeathCases","countriesDeathsArr","globalDeaths","todayRecovered","recovered","RecoveredCases","countriesRecoveredArr","globalRecovered","Logo","xmlns","height","viewBox","cx","cy","r","fill","d","rx","ry","transform","Header","href","L","Icon","Default","prototype","_getIconUrl","fillRedOptions","fillColor","mapBlock","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","LayerGroup","Circle","lat","long","pathOptions","radius","markerSize","stroke","Tooltip","OptionItem","value","province","split","word","toUpperCase","substring","join","BarChart","useState","historicalDataCountries","setHistoricalDataCountries","historicalDataTotal","setHistoricalDataTotal","currentData","setCurrentData","useEffect","a","fetch","response","json","data","getHistoricalData","getHistoricalDataTotal","onChange","event","target","includes","valueArr","selectedCountry","filter","item","timeline","changeGraph","undefined","labels","Object","keys","slice","datasets","label","values","backgroundColor","borderColor","borderWidth","options","tooltips","callbacks","tooltipItem","yLabel","legend","display","boxWidth","padding","title","text","lineHeight","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","callback","App","globalData","setGlobalData","isToday","setIsToday","countriesData","setCountriesData","worldDataCases","setWorldDataCases","worldDataDeaths","setWorldDataDeaths","worldDataRecovered","setWorldDataRecovered","dataSummary","getGlobalData","getCountriesData","max","maxCases","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9cab549.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./globalAmount.css\";\r\n\r\nfunction GlobalAmount({ globalCases }) {\r\n  let readableAmount = globalCases\r\n    .toString()\r\n    .replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, \"$1 \");\r\n  return (\r\n    <div className=\"global-amount\">\r\n      <h2 className=\"global-title\">Global Cases</h2>\r\n      <p className=\"global-cases\">{readableAmount}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GlobalAmount;\r\n","import React from \"react\";\r\nimport \"./countryItem.css\";\r\n\r\nfunction CountryItem({ countryObj, todayStatus }) {\r\n  let readableAmount;\r\n  if (todayStatus) {\r\n    readableAmount = countryObj.todayCases\r\n      .toString()\r\n      .replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, \"$1 \");\r\n  } else {\r\n    readableAmount = countryObj.cases\r\n      .toString()\r\n      .replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, \"$1 \");\r\n  }\r\n  return (\r\n    <li className=\"country-item-wrapper\">\r\n      <div className=\"country-flag\">\r\n        <img\r\n          src={countryObj.countryInfo.flag}\r\n          width=\"18\"\r\n          alt=\"national-flag\"\r\n        ></img>\r\n      </div>\r\n      <div className=\"country-title\">{countryObj.country}</div>\r\n      <div className=\"country-infectedAmount\">\r\n        <div className=\"amount-wrapper\">{readableAmount}</div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default CountryItem;\r\n","import React from \"react\";\r\nimport \"./casesByCountry.css\";\r\nimport CountryItem from \"./CountryItem\";\r\n\r\nfunction CasesByCountry({ countriesArr, todayStatus }) {\r\n  return (\r\n    <div className=\"country-cases\">\r\n      <h2 className=\"country-cases-title\">Cases by Country</h2>\r\n      <ul className=\"country-cases-list\">\r\n        {countriesArr.map((countryItem, index) => {\r\n          return (\r\n            <CountryItem\r\n              countryObj={countryItem}\r\n              todayStatus={todayStatus}\r\n              key={index}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CasesByCountry;\r\n","import React from \"react\";\r\nimport \"./countryItem.css\";\r\n\r\nfunction CountryItem({ countryDataObj, todayStatus }) {\r\n  let readableAmount;\r\n  if (todayStatus) {\r\n    readableAmount = countryDataObj.todayDeaths\r\n      .toString()\r\n      .replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, \"$1 \");\r\n  } else {\r\n    readableAmount = countryDataObj.deaths\r\n      .toString()\r\n      .replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, \"$1 \");\r\n  }\r\n  return (\r\n    <li className=\"country-deathCases-wrapper\">\r\n      <div className=\"country-flag\">\r\n        <img\r\n          src={countryDataObj.countryInfo.flag}\r\n          width=\"18\"\r\n          alt=\"national-flag\"\r\n        ></img>\r\n      </div>\r\n      <div className=\"country-title\">{countryDataObj.country}</div>\r\n      <div className=\"country-deathAmount\">\r\n        <div className=\"amount-wrapper\">{readableAmount}</div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default CountryItem;\r\n","import React from \"react\";\r\nimport \"./deathCases.css\";\r\nimport CountryItem from \"./CountryItem\";\r\n\r\nfunction DeathCases({ countriesDeathsArr, globalDeaths, todayStatus }) {\r\n  let readableAmount = globalDeaths\r\n    .toString()\r\n    .replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, \"$1 \");\r\n\r\n  return (\r\n    <div className=\"country-deathCases\">\r\n      <h2 className=\"country-deathCases-title\">Deaths</h2>\r\n      <p className=\"global-deathsAmount\">{readableAmount}</p>\r\n      <ul className=\"country-deathCases-list\">\r\n        {countriesDeathsArr.map((countryItem, index) => {\r\n          return (\r\n            <CountryItem\r\n              countryDataObj={countryItem}\r\n              key={index}\r\n              todayStatus={todayStatus}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeathCases;\r\n","import React from \"react\";\r\nimport \"./countryItem.css\";\r\n\r\nfunction CountryItem({ countryDataObj, todayStatus }) {\r\n  let readableAmount;\r\n  if (todayStatus) {\r\n    readableAmount = countryDataObj.todayRecovered\r\n      .toString()\r\n      .replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, \"$1 \");\r\n  } else {\r\n    readableAmount = countryDataObj.recovered\r\n      .toString()\r\n      .replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, \"$1 \");\r\n  }\r\n  return (\r\n    <li className=\"country-recoveredCases-wrapper\">\r\n      <div className=\"country-flag\">\r\n        <img\r\n          src={countryDataObj.countryInfo.flag}\r\n          width=\"18\"\r\n          alt=\"national-flag\"\r\n        ></img>\r\n      </div>\r\n      <div className=\"country-title\">{countryDataObj.country}</div>\r\n      <div className=\"country-recoveredAmount\">\r\n        <div className=\"amount-wrapper\">{readableAmount}</div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default CountryItem;\r\n","import React from \"react\";\r\nimport \"./recoveredCases.css\";\r\nimport CountryItem from \"./CountryItem\";\r\n\r\nfunction RecoveredCases({\r\n  countriesRecoveredArr,\r\n  globalRecovered,\r\n  todayStatus,\r\n}) {\r\n  let readableAmount = globalRecovered\r\n    .toString()\r\n    .replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, \"$1 \");\r\n\r\n  return (\r\n    <div className=\"country-recoveredCases\">\r\n      <h2 className=\"country-recoveredCases-title\">Recovered</h2>\r\n      <p className=\"global-recoveredAmount\">{readableAmount}</p>\r\n      <ul className=\"country-recoveredCases-list\">\r\n        {countriesRecoveredArr.map((countryItem, index) => {\r\n          return (\r\n            <CountryItem\r\n              countryDataObj={countryItem}\r\n              key={index}\r\n              todayStatus={todayStatus}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecoveredCases;\r\n","import React from \"react\";\r\n\r\nfunction Logo() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"32\"\r\n      height=\"32\"\r\n      viewBox=\"0 0 511.973 511.973\"\r\n    >\r\n      <circle cx=\"255.986\" cy=\"255.986\" r=\"164.558\" fill=\"#ff7c48\"></circle>\r\n      <path\r\n        fill=\"#ff415b\"\r\n        d=\"M255.986 91.428v329.117c90.883 0 164.558-73.675 164.558-164.558S346.869 91.428 255.986 91.428z\"\r\n      ></path>\r\n      <path\r\n        fill=\"#ff415b\"\r\n        d=\"M459.196 355.989l-40.771-23.539a178.157 178.157 0 0016.487-61.464h25.118v16.458h30v-62.915h-30v16.458h-25.118a178.18 178.18 0 00-16.487-61.464l40.771-23.539 10.236 17.729 25.98-15-35.471-61.438-25.98 15 10.236 17.729-40.814 23.564a181.027 181.027 0 00-44.977-44.976l12.593-21.811 14.252 8.229 15-25.98-54.485-31.46-15 25.98 14.252 8.229-12.568 21.769a178.18 178.18 0 00-61.464-16.488V30h20.472V0h-70.943v30h20.472v47.06a178.158 178.158 0 00-61.464 16.488l-12.568-21.769 14.252-8.229-15-25.98-54.485 31.458 15 25.98 14.252-8.229 12.593 21.811a181.06 181.06 0 00-44.977 44.976l-40.814-23.564 10.236-17.729-25.98-15-35.472 61.439 25.98 15 10.236-17.729 40.771 23.539a178.157 178.157 0 00-16.487 61.464H51.942v-16.458h-30v62.915h30v-16.458H77.06a178.18 178.18 0 0016.487 61.464l-40.771 23.539-10.235-17.728-25.98 15 35.471 61.438 25.98-15-10.236-17.728 40.814-23.564a181.04 181.04 0 0044.976 44.976l-12.593 21.811-14.252-8.229-15 25.98 54.485 31.458 15-25.98-14.252-8.229 12.568-21.769a178.18 178.18 0 0061.464 16.488v47.06h-20.472v30h70.943v-30h-20.472v-47.06a178.158 178.158 0 0061.464-16.488l12.568 21.769-14.252 8.229 15 25.98 54.485-31.458-15-25.98-14.252 8.229-12.593-21.811a181.04 181.04 0 0044.976-44.976l40.814 23.564-10.236 17.729 25.98 15 35.471-61.438-25.98-15zm-203.21 49.555c-82.467 0-149.558-67.091-149.558-149.558s67.091-149.558 149.558-149.558 149.558 67.091 149.558 149.558-67.091 149.558-149.558 149.558z\"\r\n      ></path>\r\n      <g fill=\"#ffb655\">\r\n        <circle cx=\"317.018\" cy=\"203.733\" r=\"42.75\"></circle>\r\n        <ellipse\r\n          cx=\"277.932\"\r\n          cy=\"332.658\"\r\n          rx=\"43.333\"\r\n          ry=\"43.333\"\r\n          transform=\"rotate(-45 277.893 332.733)\"\r\n        ></ellipse>\r\n        <circle cx=\"183.685\" cy=\"233.902\" r=\"47.083\"></circle>\r\n      </g>\r\n      <circle cx=\"317.018\" cy=\"203.733\" r=\"42.75\" fill=\"#ff7c48\"></circle>\r\n      <path\r\n        fill=\"#e50058\"\r\n        d=\"M459.196 355.989l-40.771-23.539a178.157 178.157 0 0016.487-61.464h25.118v16.458h30v-62.915h-30v16.458h-25.118a178.18 178.18 0 00-16.487-61.464l40.771-23.539 10.236 17.729 25.98-15-35.471-61.438-25.98 15 10.236 17.729-40.814 23.564a181.027 181.027 0 00-44.977-44.976l12.593-21.811 14.252 8.229 15-25.98-54.485-31.46-15 25.98 14.252 8.229-12.568 21.769a178.18 178.18 0 00-61.464-16.488V30h20.472V0h-35.472v106.428c82.467 0 149.558 67.091 149.558 149.558s-67.091 149.558-149.558 149.558v106.428h35.472v-30h-20.472v-47.06a178.158 178.158 0 0061.464-16.488l12.568 21.769-14.252 8.229 15 25.98 54.485-31.458-15-25.98-14.252 8.229-12.593-21.811a181.04 181.04 0 0044.976-44.976l40.814 23.564-10.236 17.729 25.98 15 35.471-61.438-25.98-15z\"\r\n      ></path>\r\n      <path\r\n        fill=\"#ff7c48\"\r\n        d=\"M321.266 332.658c0-23.894-19.439-43.333-43.333-43.333a43.05 43.05 0 00-21.946 5.991v74.685a43.057 43.057 0 0021.946 5.99c23.893 0 43.333-19.439 43.333-43.333z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport \"./header.css\";\r\nimport Logo from \"./logo\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header-wrapper\">\r\n      <div className=\"header-title\">\r\n       \r\n        <Logo />\r\n        <h1>\r\n          COVID-19 Dashboard by the Center for Systems Science and Engineering\r\n          (CSSE) at Johns Hopkins University (JHU)\r\n        </h1>\r\n      </div>\r\n      <div className=\"burger\">\r\n        <span className=\"burger-line\"></span>\r\n        <ul className=\"menu__list hidden\">\r\n          <li className=\"menu__item\">\r\n            <a href=\"./\">Some link</a>\r\n          </li>\r\n          <li className=\"menu__item\">\r\n            <a href=\"./\">Some link</a>\r\n          </li>\r\n          <li className=\"menu__item\">\r\n            <a href=\"./\">Some link</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  LayerGroup,\r\n  Circle,\r\n  Tooltip,\r\n} from \"react-leaflet\";\r\nimport \"./mapBlock.css\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nconst fillRedOptions = { fillColor: \"#FF0000\" };\r\nconst accessToken =\r\n  \"pk.eyJ1IjoiZHJlYW1lci1hIiwiYSI6ImNraXliMWdwMjN6YXUycWxiMng1YXY3cjEifQ.5WvajAdFAhL9b2wUJ4zkAg\";\r\n\r\nfunction mapBlock({ countriesArr }) {\r\n  return (\r\n    <MapContainer center={[0, 0]} zoom={2} scrollWheelZoom={true}>\r\n      <TileLayer\r\n        attribution='Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, \r\n                                       <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, \r\n                                       Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>'\r\n        url={`https://api.mapbox.com/styles/v1/colbyfayock/ck8c2foj72lqk1jnug0g2haw0/tiles/256/{z}/{x}/{y}@2x?access_token=${accessToken}`}\r\n      />\r\n      <LayerGroup>\r\n        {countriesArr.map((countryItem, index) => {\r\n          return (\r\n            <Circle\r\n              center={[\r\n                countryItem.countryInfo.lat,\r\n                countryItem.countryInfo.long,\r\n              ]}\r\n              pathOptions={fillRedOptions}\r\n              radius={countryItem.markerSize}\r\n              stroke={false}\r\n              key={index}\r\n            >\r\n              <Tooltip>{countryItem.cases}</Tooltip>\r\n            </Circle>\r\n          );\r\n        })}\r\n      </LayerGroup>\r\n    </MapContainer>\r\n  );\r\n}\r\nexport default mapBlock;\r\n","import React from \"react\";\r\n\r\nfunction OptionItem({ countriesArr }) {\r\n  return (\r\n \r\n      countriesArr.map((country, index) => {\r\n        return (\r\n          <option\r\n            key={index}\r\n            value={\r\n              country.province === null\r\n                ? [country.country]\r\n                : [country.country, country.province]\r\n            }\r\n          >\r\n            {country.province === null\r\n              ? `${country.country}`\r\n              : `${country.country} ${country.province\r\n                  .split(/\\s+/)\r\n                  .map((word) => word[0].toUpperCase() + word.substring(1))\r\n                  .join(\" \")}`}\r\n          </option>\r\n        );\r\n      })\r\n  );\r\n}\r\n\r\nexport default OptionItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./barChart.css\";\r\nimport OptionItem from \"./OptionItem\";\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nfunction BarChart() {\r\n  const [historicalDataCountries, setHistoricalDataCountries] = useState([]);\r\n  const [historicalDataTotal, setHistoricalDataTotal] = useState([]);\r\n  const [currentData, setCurrentData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getHistoricalData = async () => {\r\n      const response = await fetch(\"https://disease.sh/v3/covid-19/historical\");\r\n      const data = await response.json();\r\n\r\n      setHistoricalDataCountries(data);\r\n    };\r\n\r\n    getHistoricalData();\r\n  }, []);\r\n  useEffect(() => {\r\n    const getHistoricalDataTotal = async () => {\r\n      const response = await fetch(\r\n        \"https://disease.sh/v3/covid-19/historical/all\"\r\n      );\r\n      const data = await response.json();\r\n\r\n      setCurrentData(data);\r\n      setHistoricalDataTotal(data);\r\n    };\r\n\r\n    getHistoricalDataTotal();\r\n  }, []);\r\n  function changeGraph(event) {\r\n    if (event.target.value === \"total\") {\r\n      setCurrentData(historicalDataTotal);\r\n    } else {\r\n      if (event.target.value.includes(\",\")) {\r\n        let valueArr = event.target.value.split(\",\");\r\n        let selectedCountry = historicalDataCountries.filter(\r\n          (item) => item.province === valueArr[1]\r\n        );\r\n        setCurrentData(selectedCountry[0].timeline);\r\n      } else {\r\n        let selectedCountry = historicalDataCountries.filter(\r\n          (item) => item.country === event.target.value\r\n        );\r\n        setCurrentData(selectedCountry[0].timeline);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"barChart\">\r\n      <form className=\"form\">\r\n        <select\r\n          className=\"data-select\"\r\n          onChange={(event) => changeGraph(event)}\r\n        >\r\n          <option value=\"total\">Total</option>\r\n          {historicalDataCountries !== undefined ? (\r\n            <OptionItem countriesArr={historicalDataCountries} />\r\n          ) : null}\r\n        </select>\r\n      </form>\r\n      {currentData.cases !== undefined ? (\r\n        <Line\r\n          data={{\r\n            labels: Object.keys(currentData.cases).slice(0, 14),\r\n            datasets: [\r\n              {\r\n                label: \"Cases\",\r\n                data: Object.values(currentData.cases).slice(0, 14),\r\n                backgroundColor: \"orange\",\r\n                borderColor: \"red\",\r\n                borderWidth: 1,\r\n                fill: false,\r\n              },\r\n              {\r\n                label: \"Deaths\",\r\n                data: Object.values(currentData.deaths).slice(0, 14),\r\n                backgroundColor: \"#424242\",\r\n                borderColor: \"gray\",\r\n                borderWidth: 1,\r\n                fill: false,\r\n              },\r\n              {\r\n                label: \"Recovered\",\r\n                data: Object.values(currentData.recovered),\r\n                backgroundColor: \"#3F8B2F\",\r\n                borderColor: \"green\",\r\n                borderWidth: 1,\r\n                fill: false,\r\n              },\r\n            ],\r\n          }}\r\n          height={220}\r\n          width={300}\r\n          options={{\r\n            tooltips: {\r\n              callbacks: {\r\n                label: function (tooltipItem, data) {\r\n                  return tooltipItem.yLabel\r\n                    .toString()\r\n                    .replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, \"$1 \");\r\n                },\r\n              },\r\n            },\r\n            legend: {\r\n              display: true,\r\n              labels: {\r\n                boxWidth: 10,\r\n                padding: 10,\r\n              },\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: \"Last 14 days dynamic\",\r\n              lineHeight: 0,\r\n            },\r\n            maintainAspectRatio: true,\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: false,\r\n                    callback: function (value) {\r\n                      return value\r\n                        .toString()\r\n                        .replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, \"$1 \");\r\n                    },\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          }}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport GlobalAmount from \"./leftStatBlock/GlobalAmount/GlobalAmount\";\r\nimport CasesByCountry from \"./leftStatBlock/CasesByCountry/CasesByCountry\";\r\nimport DeathCases from \"./rightStatBlock/DeathCases/DeathCases\";\r\nimport RecoveredCases from \"./rightStatBlock/RecoveredCases/RecoveredCases\";\r\nimport \"./App.css\";\r\nimport Header from \"./header/header\";\r\nimport MapBlock from './mapBlock/mapBlock'\r\nimport BarChart from \"./graph/BarChart\";\r\n\r\nfunction App() {\r\n  const [globalData, setGlobalData] = useState([]);\r\n  const [isToday, setIsToday] = useState([]);\r\n\r\n  const [countriesData, setCountriesData] = useState([]);\r\n  const [worldDataCases, setWorldDataCases] = useState([]);\r\n  const [worldDataDeaths, setWorldDataDeaths] = useState([]);\r\n  const [worldDataRecovered, setWorldDataRecovered] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getGlobalData = async () => {\r\n      const response = await fetch(\"https://disease.sh/v3/covid-19/all\");\r\n      const dataSummary = await response.json();\r\n\r\n      setGlobalData(dataSummary);\r\n      setWorldDataCases(dataSummary.cases);\r\n      setWorldDataDeaths(dataSummary.deaths);\r\n      setWorldDataRecovered(dataSummary.recovered);\r\n      setIsToday(false);\r\n    };\r\n\r\n    getGlobalData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      const response = await fetch(\"https://disease.sh/v3/covid-19/countries\");\r\n      const countriesData = await response.json();\r\n      setCountriesData(countriesData);\r\n    };\r\n\r\n    getCountriesData();\r\n  }, []);\r\n\r\n  function maxCases (countriesData) {\r\n    let max = 0;\r\n    countriesData.map((item) => {\r\n      if (item.cases > max) {\r\n        max = item.cases;\r\n      }\r\n    })\r\n    return max;\r\n  }\r\n\r\n  const max = maxCases(countriesData);\r\n\r\n  countriesData.map((item) => {\r\n    if (item.cases === max) {\r\n    item.markerSize = 700000;\r\n    } else {item.markerSize = item.cases / max * 700000}\r\n  })\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"header container\">\r\n        <Header />\r\n      </header>\r\n      <main className=\"main container\">\r\n        <div className=\"infected\">\r\n          <div className=\"global\">\r\n            {worldDataCases !== undefined ? (\r\n              <GlobalAmount globalCases={worldDataCases} />\r\n            ) : null}\r\n          </div>\r\n          <div className=\"country\">\r\n            {countriesData !== undefined ? (\r\n              <CasesByCountry\r\n                countriesArr={countriesData}\r\n                todayStatus={isToday}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <div className=\"period-buttons-wrapper\">\r\n            <button\r\n              className={isToday ? `button` : `button button--active`}\r\n              onClick={() => {\r\n                setWorldDataCases(globalData.cases);\r\n                setWorldDataDeaths(globalData.deaths);\r\n                setWorldDataRecovered(globalData.recovered);\r\n                setIsToday(false);\r\n              }}\r\n            >\r\n              Total\r\n            </button>\r\n            <button\r\n              className={isToday ? `button button--active` : `button`}\r\n              onClick={() => {\r\n                setWorldDataCases(globalData.todayCases);\r\n                setWorldDataDeaths(globalData.todayDeaths);\r\n                setWorldDataRecovered(globalData.todayRecovered);\r\n                setIsToday(true);\r\n              }}\r\n            >\r\n              Today\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"map\">\r\n          {countriesData !== undefined ? (\r\n              <MapBlock \r\n                countriesArr={countriesData}\r\n              />\r\n            ) : null}\r\n        </div>\r\n        <div className=\"day-statistic\">\r\n          <div className=\"day-statistic-data\">\r\n            <div className=\"deaths\">\r\n              {countriesData !== undefined ? (\r\n                <DeathCases\r\n                  countriesDeathsArr={countriesData}\r\n                  globalDeaths={worldDataDeaths}\r\n                  todayStatus={isToday}\r\n                />\r\n              ) : null}\r\n            </div>\r\n            <div className=\"lives\">\r\n              {countriesData !== undefined ? (\r\n                <RecoveredCases\r\n                  countriesRecoveredArr={countriesData}\r\n                  globalRecovered={worldDataRecovered}\r\n                  todayStatus={isToday}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <BarChart />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}